import{_ as s}from"./plugin-vue_export-helper-x3n3nnut.js";import{o as n,c as a,e}from"./app-oi_f_tKP.js";const t={},p=e(`<blockquote><p><strong>该脚本目标可实现的效果为：</strong></p><ol><li>判断HA双机配置是否是同步状态;</li><li>如不同步可进行HA主备机判断，并进行配置同步;</li><li>配置同步完成后生成ucs配置文件（文件命令格式为设备主机名）；</li><li>将配置文件通过SCP方式传送至远端SFTP服务器;</li><li>在文件传输完成后，删除本地的文件。</li><li>搭配crontab实时配置的定时保存及上传。</li></ol><p><strong>脚本未完成及测试的部分：</strong></p><ol><li>待测试N+M集群时的同步状态判断</li></ol><p><strong>适用版本</strong> 该脚本仅在BIGIP V15版本进行了测试，其他版本未进行测试。</p></blockquote><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token shebang important">#!/bin/bash</span>

<span class="token assign-left variable">statusFile</span><span class="token operator">=</span>/var/prompt/ps1  <span class="token comment">#设备主备机状态</span>
<span class="token assign-left variable">configSyncStatusFile</span><span class="token operator">=</span>/var/prompt/cmiSyncStatus  <span class="token comment">#设备配置是否同步</span>
<span class="token assign-left variable">deviceGroup</span><span class="token operator">=</span><span class="token variable"><span class="token variable">$(</span>tmsh list cm device-group one-line <span class="token operator">|</span> <span class="token function">grep</span> sync-failover <span class="token operator">|</span> <span class="token function">cut</span> -d<span class="token string">&#39; &#39;</span> <span class="token parameter variable">-f3</span><span class="token variable">)</span></span>  <span class="token comment">#获取设备HA组名</span>
<span class="token keyword">if</span> <span class="token punctuation">[</span><span class="token punctuation">[</span> <span class="token parameter variable">-r</span> <span class="token variable">$configSyncStatusFile</span> <span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token keyword">then</span>
    <span class="token builtin class-name">read</span> configSyncStatus <span class="token operator">&lt;</span> <span class="token variable">$configSyncStatusFile</span><span class="token punctuation">;</span>
<span class="token keyword">fi</span><span class="token punctuation">;</span>

<span class="token keyword">if</span> <span class="token punctuation">[</span><span class="token punctuation">[</span> <span class="token variable">$configSyncStatus</span> <span class="token operator">=</span> <span class="token string">&quot;In Sync&quot;</span> <span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token keyword">then</span> 
    tmsh save sys ucs <span class="token variable"><span class="token variable">$(</span><span class="token builtin class-name">echo</span> <span class="token environment constant">$HOSTNAME</span> <span class="token operator">|</span> <span class="token function">cut</span> -d<span class="token string">&#39;.&#39;</span> <span class="token parameter variable">-f1</span><span class="token variable">)</span></span>
        <span class="token comment">#expect交互脚本，用于SCP上传时的密码输入交互。</span>
        /usr/bin/expect <span class="token operator">&lt;&lt;</span> <span class="token string">EOF
        set timeout 30
        spawn bash -c &quot;scp -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null /var/local/ucs/<span class="token variable"><span class="token variable">$(</span><span class="token builtin class-name">echo</span> <span class="token environment constant">$HOSTNAME</span> <span class="token operator">|</span> <span class="token function">cut</span> -d<span class="token string">&#39;.&#39;</span> <span class="token parameter variable">-f1</span><span class="token variable">)</span></span>.ucs root@1.1.1.1:/opt/dev-autobak/cfg/&quot;
        expect &quot;*password:&quot; {send &quot;111111<span class="token entity" title="\\r">\\r</span>&quot;} 
        expect eof
EOF</span>
    
    <span class="token function">rm</span> <span class="token parameter variable">-f</span> /var/local/ucs/<span class="token variable"><span class="token variable">$(</span><span class="token builtin class-name">echo</span> <span class="token environment constant">$HOSTNAME</span> <span class="token operator">|</span> <span class="token function">cut</span> -d<span class="token string">&#39;.&#39;</span> <span class="token parameter variable">-f1</span><span class="token variable">)</span></span>.ucs
<span class="token keyword">elif</span> <span class="token punctuation">[</span><span class="token punctuation">[</span> <span class="token variable">$configSyncStatus</span> <span class="token operator">=</span> <span class="token string">&quot;Changes Pending&quot;</span> <span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token keyword">then</span>
        <span class="token keyword">if</span> <span class="token punctuation">[</span> <span class="token parameter variable">-r</span> <span class="token variable">$statusFile</span> <span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token keyword">then</span>
            <span class="token builtin class-name">read</span> status <span class="token operator">&lt;</span><span class="token variable">$statusFile</span>
        <span class="token keyword">fi</span>

        <span class="token keyword">if</span> <span class="token punctuation">[</span><span class="token punctuation">[</span> <span class="token variable">$status</span> <span class="token operator">=</span> Standby <span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
            <span class="token keyword">then</span> 
            tmsh run cm config-sync from-group <span class="token variable">$deviceGroup</span>   <span class="token comment">#如果配置不同步，且本机是备机时，且配置同步是从组到本设备。</span>
            tmsh save sys ucs <span class="token variable"><span class="token variable">$(</span><span class="token builtin class-name">echo</span> <span class="token environment constant">$HOSTNAME</span> <span class="token operator">|</span> <span class="token function">cut</span> -d<span class="token string">&#39;.&#39;</span> <span class="token parameter variable">-f1</span><span class="token variable">)</span></span>
                <span class="token comment">#expect交互脚本，用于SCP上传时的密码输入交互。</span>
                /usr/bin/expect <span class="token operator">&lt;&lt;</span> <span class="token string">EOF
                set timeout 30
                spawn bash -c &quot;scp -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null /var/local/ucs/<span class="token variable"><span class="token variable">$(</span><span class="token builtin class-name">echo</span> <span class="token environment constant">$HOSTNAME</span> <span class="token operator">|</span> <span class="token function">cut</span> -d<span class="token string">&#39;.&#39;</span> <span class="token parameter variable">-f1</span><span class="token variable">)</span></span>.ucs root@1.1.1.1:/opt/dev-autobak/cfg/&quot;
                expect &quot;*password:&quot; {send &quot;111111<span class="token entity" title="\\r">\\r</span>&quot;} 

                expect eof
EOF</span>
    
            <span class="token function">rm</span> <span class="token parameter variable">-f</span> /var/local/ucs/<span class="token variable"><span class="token variable">$(</span><span class="token builtin class-name">echo</span> <span class="token environment constant">$HOSTNAME</span> <span class="token operator">|</span> <span class="token function">cut</span> -d<span class="token string">&#39;.&#39;</span> <span class="token parameter variable">-f1</span><span class="token variable">)</span></span>.ucs
        <span class="token keyword">elif</span> <span class="token punctuation">[</span><span class="token punctuation">[</span> <span class="token variable">$status</span> <span class="token operator">=</span> Active <span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
            <span class="token keyword">then</span> 
            tmsh run cm config-sync to-group <span class="token variable">$deviceGroup</span>   <span class="token comment">#如果配置不同步，且本机是备机时，且配置同步是从本设备到组。</span>
            tmsh save sys ucs <span class="token variable"><span class="token variable">$(</span><span class="token builtin class-name">echo</span> <span class="token environment constant">$HOSTNAME</span> <span class="token operator">|</span> <span class="token function">cut</span> -d<span class="token string">&#39;.&#39;</span> <span class="token parameter variable">-f1</span><span class="token variable">)</span></span>
                <span class="token comment">#expect交互脚本，用于SCP上传时的密码输入交互。</span>
                /usr/bin/expect <span class="token operator">&lt;&lt;</span> <span class="token string">EOF
                set timeout 30
                spawn bash -c &quot;scp -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null /var/local/ucs/<span class="token variable"><span class="token variable">$(</span><span class="token builtin class-name">echo</span> <span class="token environment constant">$HOSTNAME</span> <span class="token operator">|</span> <span class="token function">cut</span> -d<span class="token string">&#39;.&#39;</span> <span class="token parameter variable">-f1</span><span class="token variable">)</span></span>.ucs root@1.1.1.1:/opt/dev-autobak/cfg/&quot;
                expect &quot;*password:&quot; {send &quot;111111<span class="token entity" title="\\r">\\r</span>&quot;} 
    
                expect eof
EOF</span>
    
            <span class="token function">rm</span> <span class="token parameter variable">-f</span> /var/local/ucs/<span class="token variable"><span class="token variable">$(</span><span class="token builtin class-name">echo</span> <span class="token environment constant">$HOSTNAME</span> <span class="token operator">|</span> <span class="token function">cut</span> -d<span class="token string">&#39;.&#39;</span> <span class="token parameter variable">-f1</span><span class="token variable">)</span></span>.ucs
        <span class="token keyword">else</span>
            <span class="token builtin class-name">exit</span>
        <span class="token keyword">fi</span>
<span class="token keyword">elif</span> <span class="token punctuation">[</span><span class="token punctuation">[</span> <span class="token variable">$configSyncStatus</span> <span class="token operator">=</span> <span class="token string">&quot;Standalone&quot;</span> <span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token keyword">then</span>
    tmsh save sys ucs <span class="token variable"><span class="token variable">$(</span><span class="token builtin class-name">echo</span> <span class="token environment constant">$HOSTNAME</span> <span class="token operator">|</span> <span class="token function">cut</span> -d<span class="token string">&#39;.&#39;</span> <span class="token parameter variable">-f1</span><span class="token variable">)</span></span>
        <span class="token comment">#expect交互脚本，用于SCP上传时的密码输入交互。</span>
        /usr/bin/expect <span class="token operator">&lt;&lt;</span> <span class="token string">EOF
        set timeout 30
        spawn bash -c &quot;scp -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null /var/local/ucs/<span class="token variable"><span class="token variable">$(</span><span class="token builtin class-name">echo</span> <span class="token environment constant">$HOSTNAME</span> <span class="token operator">|</span> <span class="token function">cut</span> -d<span class="token string">&#39;.&#39;</span> <span class="token parameter variable">-f1</span><span class="token variable">)</span></span>.ucs root@1.1.1.1:/opt/dev-autobak/cfg/&quot;
        expect &quot;*password:&quot; {send &quot;111111<span class="token entity" title="\\r">\\r</span>&quot;} 

        expect eof
EOF</span>
    
    <span class="token function">rm</span> <span class="token parameter variable">-f</span> /var/local/ucs/<span class="token variable"><span class="token variable">$(</span><span class="token builtin class-name">echo</span> <span class="token environment constant">$HOSTNAME</span> <span class="token operator">|</span> <span class="token function">cut</span> -d<span class="token string">&#39;.&#39;</span> <span class="token parameter variable">-f1</span><span class="token variable">)</span></span>.ucs
<span class="token keyword">else</span>
    <span class="token builtin class-name">exit</span>
<span class="token keyword">fi</span>     
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,2),l=[p];function o(c,i){return n(),a("div",null,l)}const k=s(t,[["render",o],["__file","autoCfgBakToRomteSFTP.html.vue"]]);export{k as default};
