import{_ as s}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as i,o as e,a}from"./app-CRotd6eL.js";const l={},n=a(`<h1 id="busybox" tabindex="-1"><a class="header-anchor" href="#busybox"><span>busybox</span></a></h1><h2 id="如何运行一个busybox容器" tabindex="-1"><a class="header-anchor" href="#如何运行一个busybox容器"><span>如何运行一个busybox容器</span></a></h2><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">docker</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> run</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> -it</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> busybox</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h2 id="如何使通过docker-compose部署的busybox一直保持运行状态" tabindex="-1"><a class="header-anchor" href="#如何使通过docker-compose部署的busybox一直保持运行状态"><span>如何使通过docker-compose部署的busybox一直保持运行状态</span></a></h2><p>通过增加一个不中断运行的command命令，则可以使busybox一直处于运行状态。</p><div class="language-yaml line-numbers-mode" data-highlighter="shiki" data-ext="yaml" data-title="yaml" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#E06C75;">version</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">&#39;3&#39;</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#E06C75;">services</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#E06C75;">  busybox</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#E06C75;">    name</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">busybox</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#E06C75;">    image</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">busybox</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#E06C75;">    command</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">tail -f /dev/null</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,6),h=[n];function t(d,r){return e(),i("div",null,h)}const p=s(l,[["render",t],["__file","busybox.html.vue"]]),c=JSON.parse('{"path":"/tools/Docker/busybox.html","title":"busybox","lang":"zh-CN","frontmatter":{"icon":"docker","author":"小苹果儿","date":"2023-11-04T00:00:00.000Z","category":["Docker"],"tag":["docker","容器"]},"headers":[{"level":2,"title":"如何运行一个busybox容器","slug":"如何运行一个busybox容器","link":"#如何运行一个busybox容器","children":[]},{"level":2,"title":"如何使通过docker-compose部署的busybox一直保持运行状态","slug":"如何使通过docker-compose部署的busybox一直保持运行状态","link":"#如何使通过docker-compose部署的busybox一直保持运行状态","children":[]}],"git":{"createdTime":1699257428000,"updatedTime":1699585109000,"contributors":[{"name":"00D2","email":"shijinguosjg@gmail.com","commits":2}]},"readingTime":{"minutes":0.31,"words":92},"filePathRelative":"tools/Docker/busybox.md","localizedDate":"2023年11月4日","excerpt":"\\n<h2>如何运行一个busybox容器</h2>\\n<div class=\\"language-shell line-numbers-mode\\" data-highlighter=\\"shiki\\" data-ext=\\"shell\\" data-title=\\"shell\\" style=\\"--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34\\"><pre class=\\"shiki shiki-themes github-light one-dark-pro vp-code\\"><code><span class=\\"line\\"><span style=\\"--shiki-light:#6F42C1;--shiki-dark:#61AFEF\\">docker</span><span style=\\"--shiki-light:#032F62;--shiki-dark:#98C379\\"> run</span><span style=\\"--shiki-light:#005CC5;--shiki-dark:#D19A66\\"> -it</span><span style=\\"--shiki-light:#032F62;--shiki-dark:#98C379\\"> busybox</span></span></code></pre>\\n<div class=\\"line-numbers\\" aria-hidden=\\"true\\" style=\\"counter-reset:line-number 0\\"><div class=\\"line-number\\"></div></div></div>"}');export{p as comp,c as data};
