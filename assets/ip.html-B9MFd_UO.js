import{_ as n}from"./plugin-vue_export-helper-DlAUqK2U.js";import{o as s,c as a,e as t}from"./app-8slKAdA5.js";const e={},p=t(`<h2 id="通过函数根据ip地址自动生成网关" tabindex="-1"><a class="header-anchor" href="#通过函数根据ip地址自动生成网关"><span>通过函数根据IP地址自动生成网关</span></a></h2><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token operator">=</span>LEFT<span class="token punctuation">(</span>C12,FIND<span class="token punctuation">(</span><span class="token string">&quot;X&quot;</span>,SUBSTITUTE<span class="token punctuation">(</span>C12,<span class="token string">&quot;.&quot;</span>,<span class="token string">&quot;X&quot;</span>,3<span class="token punctuation">))</span>-1<span class="token punctuation">)</span><span class="token operator">&amp;</span><span class="token string">&quot;.1&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>其中C12代表IP地址所在的单元格。</p><h2 id="通过函数根据ip地址自动计算vlan" tabindex="-1"><a class="header-anchor" href="#通过函数根据ip地址自动计算vlan"><span>通过函数根据IP地址自动计算VLAN</span></a></h2><h3 id="方法一" tabindex="-1"><a class="header-anchor" href="#方法一"><span>方法一</span></a></h3><blockquote><p>该方法对于IP地址第三段为个位数的支持有问题。</p></blockquote><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token operator">=</span>SUM<span class="token punctuation">(</span><span class="token number">1000</span>,SUBSTITUTE<span class="token punctuation">(</span>RIGHT<span class="token punctuation">(</span>LEFT<span class="token punctuation">(</span>C12,FIND<span class="token punctuation">(</span><span class="token string">&quot;X&quot;</span>,SUBSTITUTE<span class="token punctuation">(</span>C12,<span class="token string">&quot;.&quot;</span>,<span class="token string">&quot;X&quot;</span>,3<span class="token punctuation">))</span>-1<span class="token punctuation">)</span>,FIND<span class="token punctuation">(</span><span class="token string">&quot;X&quot;</span>,SUBSTITUTE<span class="token punctuation">(</span>C12,<span class="token string">&quot;.&quot;</span>,<span class="token string">&quot;X&quot;</span>,1<span class="token punctuation">))</span><span class="token punctuation">)</span>,<span class="token string">&quot;.&quot;</span>,<span class="token string">&quot;&quot;</span><span class="token punctuation">))</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>其中C12代表IP地址所在的单元格。</p><h3 id="方法二" tabindex="-1"><a class="header-anchor" href="#方法二"><span>方法二</span></a></h3><blockquote><p>该方法来自于CHATGPT。可正常识别IP地址第三段个位数。 这个公式首先使用 SUBSTITUTE 函数将每个点替换为空格，然后使用 MID 函数提取第三段的数值，最后使用 TRIM 函数去&gt;除可能存在的空格，然后通过 + 0 将其转换为数值。这个公式适用于IPv4地址的常见格式。</p></blockquote><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token operator">=</span>SUM<span class="token punctuation">(</span><span class="token number">3000</span>,<span class="token punctuation">(</span>TRIM<span class="token punctuation">(</span>MID<span class="token punctuation">(</span>SUBSTITUTE<span class="token punctuation">(</span>D42, <span class="token string">&quot;.&quot;</span>, REPT<span class="token punctuation">(</span><span class="token string">&quot; &quot;</span>, LEN<span class="token punctuation">(</span>D42<span class="token punctuation">))</span><span class="token punctuation">)</span>, <span class="token punctuation">(</span><span class="token number">3</span>-1<span class="token punctuation">)</span>*LEN<span class="token punctuation">(</span>D42<span class="token punctuation">)</span>+1, LEN<span class="token punctuation">(</span>D42<span class="token punctuation">))</span><span class="token punctuation">)</span> + <span class="token number">0</span><span class="token punctuation">))</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>其中D42代表IP地址所在的单元格。</p>`,12),o=[p];function c(l,i){return s(),a("div",null,o)}const d=n(e,[["render",c],["__file","ip.html.vue"]]),k=JSON.parse('{"path":"/tools/Office/Excel/ip.html","title":"通过Excel函数整理IP地址信息","lang":"zh-CN","frontmatter":{"index":true,"icon":"office-excel","title":"通过Excel函数整理IP地址信息","author":"小苹果儿","date":"2022-12-09T00:00:00.000Z","category":["Office"],"tag":["office","excel"]},"headers":[{"level":2,"title":"通过函数根据IP地址自动生成网关","slug":"通过函数根据ip地址自动生成网关","link":"#通过函数根据ip地址自动生成网关","children":[]},{"level":2,"title":"通过函数根据IP地址自动计算VLAN","slug":"通过函数根据ip地址自动计算vlan","link":"#通过函数根据ip地址自动计算vlan","children":[{"level":3,"title":"方法一","slug":"方法一","link":"#方法一","children":[]},{"level":3,"title":"方法二","slug":"方法二","link":"#方法二","children":[]}]}],"git":{"createdTime":1670735215000,"updatedTime":1706172139000,"contributors":[{"name":"00D2","email":"shijinguosjg@gmail.com","commits":4}]},"readingTime":{"minutes":0.94,"words":283},"filePathRelative":"tools/Office/Excel/ip.md","localizedDate":"2022年12月9日","excerpt":"<h2>通过函数根据IP地址自动生成网关</h2>\\n<div class=\\"language-bash\\" data-ext=\\"sh\\" data-title=\\"sh\\"><pre class=\\"language-bash\\"><code><span class=\\"token operator\\">=</span>LEFT<span class=\\"token punctuation\\">(</span>C12,FIND<span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\\"X\\"</span>,SUBSTITUTE<span class=\\"token punctuation\\">(</span>C12,<span class=\\"token string\\">\\".\\"</span>,<span class=\\"token string\\">\\"X\\"</span>,3<span class=\\"token punctuation\\">))</span>-1<span class=\\"token punctuation\\">)</span><span class=\\"token operator\\">&amp;</span><span class=\\"token string\\">\\".1\\"</span>\\n</code></pre></div>"}');export{d as comp,k as data};
