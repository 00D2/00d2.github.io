import{_ as s}from"./plugin-vue_export-helper-DlAUqK2U.js";import{o as a,c as e,e as n}from"./app-8slKAdA5.js";const o={},t=n(`<h1 id="busybox" tabindex="-1"><a class="header-anchor" href="#busybox"><span>busybox</span></a></h1><h2 id="如何运行一个busybox容器" tabindex="-1"><a class="header-anchor" href="#如何运行一个busybox容器"><span>如何运行一个busybox容器</span></a></h2><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">docker</span> run <span class="token parameter variable">-it</span> busybox
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="如何使通过docker-compose部署的busybox一直保持运行状态" tabindex="-1"><a class="header-anchor" href="#如何使通过docker-compose部署的busybox一直保持运行状态"><span>如何使通过docker-compose部署的busybox一直保持运行状态</span></a></h2><p>通过增加一个不中断运行的command命令，则可以使busybox一直处于运行状态。</p><div class="language-yaml line-numbers-mode" data-ext="yml" data-title="yml"><pre class="language-yaml"><code><span class="token key atrule">version</span><span class="token punctuation">:</span> <span class="token string">&#39;3&#39;</span>
<span class="token key atrule">services</span><span class="token punctuation">:</span>
  <span class="token key atrule">busybox</span><span class="token punctuation">:</span>
    <span class="token key atrule">name</span><span class="token punctuation">:</span> busybox
    <span class="token key atrule">image</span><span class="token punctuation">:</span> busybox
    <span class="token key atrule">command</span><span class="token punctuation">:</span> tail <span class="token punctuation">-</span>f /dev/null
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,6),c=[t];function l(i,r){return a(),e("div",null,c)}const b=s(o,[["render",l],["__file","busybox.html.vue"]]),p=JSON.parse('{"path":"/tools/Docker/busybox.html","title":"busybox","lang":"zh-CN","frontmatter":{"icon":"docker","author":"小苹果儿","date":"2023-11-04T00:00:00.000Z","category":["Docker"],"tag":["docker","容器"]},"headers":[{"level":2,"title":"如何运行一个busybox容器","slug":"如何运行一个busybox容器","link":"#如何运行一个busybox容器","children":[]},{"level":2,"title":"如何使通过docker-compose部署的busybox一直保持运行状态","slug":"如何使通过docker-compose部署的busybox一直保持运行状态","link":"#如何使通过docker-compose部署的busybox一直保持运行状态","children":[]}],"git":{"createdTime":1699257428000,"updatedTime":1699585109000,"contributors":[{"name":"00D2","email":"shijinguosjg@gmail.com","commits":2}]},"readingTime":{"minutes":0.31,"words":92},"filePathRelative":"tools/Docker/busybox.md","localizedDate":"2023年11月4日","excerpt":"\\n<h2>如何运行一个busybox容器</h2>\\n<div class=\\"language-bash\\" data-ext=\\"sh\\" data-title=\\"sh\\"><pre class=\\"language-bash\\"><code><span class=\\"token function\\">docker</span> run <span class=\\"token parameter variable\\">-it</span> busybox\\n</code></pre></div><h2>如何使通过docker-compose部署的busybox一直保持运行状态</h2>\\n<p>通过增加一个不中断运行的command命令，则可以使busybox一直处于运行状态。</p>"}');export{b as comp,p as data};
