import{_ as e}from"./plugin-vue_export-helper-DlAUqK2U.js";import{r as t,o as i,c as l,a,b as n,d as o,e as c}from"./app-LpsGiuH8.js";const p={},r=c(`<h2 id="git-cmd中文乱码解决方法" tabindex="-1"><a class="header-anchor" href="#git-cmd中文乱码解决方法"><span>git cmd中文乱码解决方法</span></a></h2><p>在win10中，用cmd或者bash中使用git时候，经常遇到乱码问题，网上类似的教程很多，一般可以直接在cmd/bash中输入如下设置命令：</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">git</span> config <span class="token parameter variable">--global</span> core.quotepath <span class="token boolean">false</span> 
<span class="token function">git</span> config <span class="token parameter variable">--global</span> gui.encoding utf-8
<span class="token function">git</span> config <span class="token parameter variable">--global</span> i18n.commit.encoding utf-8 
<span class="token function">git</span> config <span class="token parameter variable">--global</span> i18n.logoutputencoding utf-8
//bash环境下：
<span class="token builtin class-name">export</span> <span class="token assign-left variable">LESSCHARSET</span><span class="token operator">=</span>utf-8
//cmd环境下：
<span class="token builtin class-name">set</span> <span class="token assign-left variable">LESSCHARSET</span><span class="token operator">=</span>utf-8
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>这样设置完后，当前命令窗口是没问题的。但是，另打开一个还是不行。然后就想到应该是最后一句的问题。这一个并没有将这个变量保存起来。所以，就直接将最后一个变量添加到Windows环境变量中：</p><hr>`,5),d={class:"hint-container info"},g=a("p",{class:"hint-container-title"},"版权声明",-1),m=a("br",null,null,-1),u={href:"https://blog.csdn.net/sunjinshengli/article/details/81283009",target:"_blank",rel:"noopener noreferrer"};function b(h,f){const s=t("ExternalLinkIcon");return i(),l("div",null,[r,a("div",d,[g,a("p",null,[n("本文为CSDN博主「sunpro518」的原创文章，遵循CC 4.0 BY-SA版权协议，转载请附上原文出处链接及本声明。"),m,n(" 原文链接："),a("a",u,[n("https://blog.csdn.net/sunjinshengli/article/details/81283009"),o(s)])])])])}const _=e(p,[["render",b],["__file","git_cmd中文乱码.html.vue"]]),S=JSON.parse('{"path":"/tools/Git/git_cmd%E4%B8%AD%E6%96%87%E4%B9%B1%E7%A0%81.html","title":"git cmd中文乱码解决方法","lang":"zh-CN","frontmatter":{"icon":"git","author":"sunpro518","title":"git cmd中文乱码解决方法","date":"2018-07-30T00:00:00.000Z","category":["git"],"tag":["git"]},"headers":[{"level":2,"title":"git cmd中文乱码解决方法","slug":"git-cmd中文乱码解决方法","link":"#git-cmd中文乱码解决方法","children":[]}],"git":{"createdTime":1652936016000,"updatedTime":1654868607000,"contributors":[{"name":"00D2","email":"shijinguosjg@gmail.com","commits":3}]},"readingTime":{"minutes":0.83,"words":250},"filePathRelative":"tools/Git/git_cmd中文乱码.md","localizedDate":"2018年7月30日","excerpt":"<h2>git cmd中文乱码解决方法</h2>\\n<p>在win10中，用cmd或者bash中使用git时候，经常遇到乱码问题，网上类似的教程很多，一般可以直接在cmd/bash中输入如下设置命令：</p>\\n<div class=\\"language-bash\\" data-ext=\\"sh\\" data-title=\\"sh\\"><pre class=\\"language-bash\\"><code><span class=\\"token function\\">git</span> config <span class=\\"token parameter variable\\">--global</span> core.quotepath <span class=\\"token boolean\\">false</span> \\n<span class=\\"token function\\">git</span> config <span class=\\"token parameter variable\\">--global</span> gui.encoding utf-8\\n<span class=\\"token function\\">git</span> config <span class=\\"token parameter variable\\">--global</span> i18n.commit.encoding utf-8 \\n<span class=\\"token function\\">git</span> config <span class=\\"token parameter variable\\">--global</span> i18n.logoutputencoding utf-8\\n//bash环境下：\\n<span class=\\"token builtin class-name\\">export</span> <span class=\\"token assign-left variable\\">LESSCHARSET</span><span class=\\"token operator\\">=</span>utf-8\\n//cmd环境下：\\n<span class=\\"token builtin class-name\\">set</span> <span class=\\"token assign-left variable\\">LESSCHARSET</span><span class=\\"token operator\\">=</span>utf-8\\n</code></pre></div>"}');export{_ as comp,S as data};
