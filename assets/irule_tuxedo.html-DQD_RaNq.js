import{_ as i}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as e,a,o as l}from"./app-2JMA47LJ.js";const n={};function t(r,s){return l(),e("div",null,s[0]||(s[0]=[a(`<h2 id="tuxedo基本介绍" tabindex="-1"><a class="header-anchor" href="#tuxedo基本介绍"><span>Tuxedo基本介绍</span></a></h2><p>​ Tuxedo服务是一种CS应用。其机制类似被动模式的FTP服务。Tuxedo服务会产生两个TCP连接：一个称为WSL连接，是服务固定的监听控制连接；另一个是WSH连接，是真正调用服务的连接。 ​ 如果不使用源地址会话保持，那么需要Tuxedo服务器配置不同的WSH端口范围。负载均衡使用通过识别WSH端口来实现连接分发。</p><h2 id="irule配置" tabindex="-1"><a class="header-anchor" href="#irule配置"><span>iRule配置</span></a></h2><ol><li>通过irule下的data_group创建class_A或其他，代表不同tuxedo server上不同的wsh端口组。</li><li>创建不同的pool_A、其他及包含所有tuxedo节点的pool_All，代表不同的tuxedo server。</li><li>pool_All用于匹配首次的WSL请求分发。</li><li><strong>注意：WSL的端口不应被WSH端口组覆盖。</strong></li></ol><div class="language-tcl line-numbers-mode" data-highlighter="shiki" data-ext="tcl" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">when CLIENT_ACCEPTED {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    set</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> tttport [TCP::local_port]</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    if</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">        [class match </span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">$tttport</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> equals class_A]</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    } {pool pool_A}</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    elseif</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">        [class match </span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">$tttport</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> equals class_B]</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    } {pool pool_B}</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    else</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> { pool pool_All}</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="在vs调用" tabindex="-1"><a class="header-anchor" href="#在vs调用"><span>在VS调用</span></a></h2><div class="hint-container tip"><p class="hint-container-title">参考</p><ol><li><a href="https://bbs.sangfor.com.cn/forum.php?mod=viewthread&amp;tid=26399" target="_blank" rel="noopener noreferrer">https://bbs.sangfor.com.cn/forum.php?mod=viewthread&amp;tid=26399</a></li></ol></div>`,7)]))}const h=i(n,[["render",t]]),d=JSON.parse('{"path":"/network/f5/irule/irule_tuxedo.html","title":"Tuxedo中间件WSL通过f5 irules进行负载","lang":"zh-CN","frontmatter":{"icon":"simple-icons:f5","title":"Tuxedo中间件WSL通过f5 irules进行负载","author":"犄角蛙","date":"2022-08-26T00:00:00.000Z","category":["网络"],"tag":["f5","tuxedo","irule"]},"git":{"createdTime":1662708652000,"updatedTime":1746018744000,"contributors":[{"name":"00D2","username":"00D2","email":"shijinguosjg@gmail.com","commits":8,"url":"https://github.com/00D2"}]},"readingTime":{"minutes":0.94,"words":283},"filePathRelative":"network/f5/irule/irule_tuxedo.md","excerpt":"<h2>Tuxedo基本介绍</h2>\\n<p>​       Tuxedo服务是一种CS应用。其机制类似被动模式的FTP服务。Tuxedo服务会产生两个TCP连接：一个称为WSL连接，是服务固定的监听控制连接；另一个是WSH连接，是真正调用服务的连接。\\n​        如果不使用源地址会话保持，那么需要Tuxedo服务器配置不同的WSH端口范围。负载均衡使用通过识别WSH端口来实现连接分发。</p>\\n<h2>iRule配置</h2>\\n<ol>\\n<li>通过irule下的data_group创建class_A或其他，代表不同tuxedo server上不同的wsh端口组。</li>\\n<li>创建不同的pool_A、其他及包含所有tuxedo节点的pool_All，代表不同的tuxedo server。</li>\\n<li>pool_All用于匹配首次的WSL请求分发。</li>\\n<li><strong>注意：WSL的端口不应被WSH端口组覆盖。</strong></li>\\n</ol>"}');export{h as comp,d as data};
