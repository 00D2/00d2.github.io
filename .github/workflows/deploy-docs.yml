
name: 部署文档

on:
  push:
    branches:
      # 确保这是你正在使用的分支名称
      - main

jobs:
  deploy-gh-pages:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          # 如果你文档需要 Git 子模块，取消注释下一行
          # submodules: true

      - name: Install pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 8
          run_install: true

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: pnpm

      - name: Get pnpm store directory
        id: pnpm-cache
        run: |
          echo "::set-output name=pnpm_cache_dir::$(pnpm store path)"

      - uses: actions/cache@v3
        name: Setup pnpm cache
        with:
          path: ${{ steps.pnpm-cache.outputs.pnpm_cache_dir }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

#      - name: Cache dependencies
#        uses: actions/cache@v3
#        id: node-modules
#        with:
#          path: node_modules/
#          key: ${{ runner.os }}-node-modules-${{ hashFiles('pnpm.lock') }}
#          restore-keys: |
#            ${{ runner.os }}-node-modules-
#
      - name: 安装依赖
        if: steps.node-modules.outputs.cache-hit != 'true'
        run: pnpm install 

      - name: 构建文档
        env:
          NODE_OPTIONS: --max_old_space_size=8192
        run: pnpm docs:build

      - name: 部署文档
        uses: JamesIves/github-pages-deploy-action@v4
        with:
          # 这是文档部署到的分支名称
          # GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}   /* 注意：这行是新加的 */
          GITHUB_TOKEN: ${{ secrets.REPO_TOKEN }}   /* 注意：这行是新加的 */
          ACCESS_TOKEN: ${{ secrets.ACCESS_TOKEN }}
          branch: gh-pages
          folder: docs/.vuepress/dist

